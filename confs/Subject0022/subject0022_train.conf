general {
    output_dir = ./dump_results/Subject0022_val_output/
    device = cuda:0                                                         # for the main model
    device_dataset = cuda:0                                                 # for the character in case run out of memory
}

character{
    skeleton_dir =./meta_data/Subject0022/ddc.skeleton                      # skeleton file
    skinning_dir =./meta_data/Subject0022/ddc.skin                          # the skinning weights
    template_mesh_dir =./meta_data/Subject0022/ddc.obj                      # the template meshes 
    graph_dir = ./meta_data/Subject0022/ddc_graph.obj                       # the embedded graph, which is a lower res ones
    rest_pose_dir = ./meta_data/Subject0022/ddc.motion                      # the rest pose 
    blending_type = dqs                                                     # dqs / lbs
    deformation_type = embedded                                             # embedded / lbs 
    hand_mask_dir = ./meta_data/Subject0022/hand_segmentation.txt           # for Dynacap Dataset characters we comment out this entry ;D
    use_sparse = True                                                       # sparse link for the characters connectivity matrix
    compute_eg = False                                                      # whether to pose the "locally embedded defomred "                                           
    compute_delta = True                                                    # whether to pose the "locally embedded + per-vertex defomred"      
    compute_posed = False                                                   # whether to pose the "original template"     
}

# settings for the embedded deformation module
spatial_gcn { 
    dense_initializer_scale = 0.001
    feature_size1 = 16
    feature_size2 = 16
    use_batch_norm = 1
    fully_connected = 'nofull'
    ring_value = 2
    normalize = 1
    dense_inner_block = 0
    num_residual_blocks = 8
    input_size = 18
    output_size = 6
}

# settings for the per-vertex deformation module
delta_gcn { 
    dense_initializer_scale = 0.001
    feature_size1 = 16
    feature_size2 = 16
    use_batch_norm = 0
    fully_connected = 'nofull'
    ring_value = 3
    normalize = 1
    dense_inner_block = 1
    num_residual_blocks = 8
    input_size = 9
    output_size = 3
}

dataset {
    # images and cameras related
    image_dir =  ./raw_data/Subject0022/metadata/training/images/
    mask_dir =  ./raw_data/Subject0022/metadata/training/foregroundSegmentation/

    # dofs
    skeleton_angles = ./meta_data/Subject0022/skeletoolToGTPose/poseAngles.motion
    # rotation, and translation normalized dof; of (n, n-1, n-2 th frame) w.r.t the nth frame :D
    skeleton_angles_rotation_normalized = ./meta_data/Subject0022/skeletoolToGTPose/poseAnglesRotationNormalized.motion
    # converted from the original calibration file to the gaussian compatible ones
    camera_json_dir = ./meta_data/Subject0022/cameras.json

    # camera related
    camera_num = 115
    train_camera = [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107,  108, 109, 111, 112]
    val_camera = [7, 18, 27, 40]

    img_width = 1285
    img_height = 940
    barycentric_tex_size = 256

    start_frame = 110
    end_frame = 25000
    sample_interval = 10

    val_frame_start = 110
    val_frame_end = 25000
    val_sample_interval = 10000

    global_scale = 1200.
    global_translation_x = 0.
    global_translation_y = 0.
    global_translation_z = 0.

    worker_num = 16

    is_white_background = False

}

train {
    random_seed = -1

    learning_rate = 1e-4
    learning_rate_alpha = 1.0
    end_iter = 2000000
    
    save_freq = 5000
    val_freq = 5000
    val_mesh_freq = 1000
    plot_histogram_freq  = 2000

    warm_up_end = 0
    anneal_end = 1000
    start_constant_lr = 5000

    color_weight = 0.9
    ssim_weight = 0.1

    load_delta_checkpoints = True

    # point to the deformable character checkpoint
    delta_checkpoint_dir = ./checkpoints/Subject0022/deformable_character_checkpoint.pth

}

model {

    extra_settings {
        # should be fine even if we remove it
        real_global_translation_dir = ./meta_data/Subject0022/real_translation.txt
    }

    gaussian{
        sh_degree = 3
    }
}